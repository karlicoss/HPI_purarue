#!/bin/bash

cd "$(realpath "$(dirname "${BASH_SOURCE[0]}")")"

readonly DATA_DIR="${HOME}/data"

# get the name of this script
declare script_name
script_name='HPI'

# function to verify an external command is installed
havecmd() {
	local BINARY ERRMSG
	# error if first argument isn't provided
	BINARY="${1:?Must provide command to check}"
	# the commend exists, exit with 0 (success!)
	if command -v "$BINARY" >/dev/null 2>&1; then
		return 0
	else
		# construct error message
		ERRMSG="'$script_name' requires '$BINARY', could not find that on your \$PATH"
		if [[ -n "$2" ]]; then
			ERRMSG="$ERRMSG. $2"
		fi
		printf '%s\n' "$ERRMSG" 1>&2
		return 1
	fi
} && export -f havecmd

clone_if_not_exists() {
	if [[ ! -d "$2" ]]; then
		git clone "$1" "$2" || exit $?
	fi
} && export -f clone_if_not_exists

install_hpi() {
	echo "Installing HPI..."
	pip install -e .
}

create_data_dir() {
	echo "Creating data dir..."
	[[ ! -d "$DATA_DIR" ]] && mkdir -p "$DATA_DIR"
}

install_python_extras() {
	echo "Installing extra python packages..."
	pip install -r ./pypackages.txt
	pip install git+https://github.com/seanbreckenridge/aw-watcher-window
	pip install git+https://github.com/seanbreckenridge/pushshift_comment_export

}

setup_arctree() {
	if havecmd arctree; then
		# make sure its not an empty file for some reason, maybe curl failed and overwrote to nothing; have had some issues
		ARCTREE_CONTENTS="$(wc -l <"$(which arctree)")"
		if ((ARCTREE_CONTENTS > 20)); then
			echo "arctree is already installed"
			return
		else
			echo "Error! arctree seems to exist but the installation seems to be broken"
			return 1
		fi
	fi
	echo "Installing arctree..."
	local INSTALL_INTO="${HOME}/.local/bin"
	if [[ ! -d "$INSTALL_INTO" ]]; then
		printf '%s does not exist, not sure where to install arctree\n' "$INSTALL_INTO" >&2
		exit 1
	fi
	cd "$INSTALL_INTO" || {
		printf 'Could not cd into %s\n' "$INSTALL_INTO"
		exit 1
	}
	local TARGET="./arctree"
	curl -s 'https://raw.githubusercontent.com/karlicoss/arctee/master/arctee.py' >"$TARGET" || exit $?
	chmod +x "$TARGET"
}

set -e
havecmd curl
havecmd bgproc "Install from https://github.com/seanbreckenridge/bgproc"
havecmd wait-for-internet " Install from https://github.com/seanbreckenridge/wait-for-internet"
havecmd evry "Install from https://github.com/seanbreckenridge/evry"
havecmd python 'This needs python!'
havecmd pip
havecmd go "Requires golang for 'https://github.com/zupzup/calories'"
set +e

wait-for-internet

# HPI global setup
(setup_arctree) || exit $? # run in subshell to not 'cd' in current process
create_data_dir
install_hpi
install_python_extras
go get github.com/zupzup/calories

# export specific setup
./scripts/structure

bash -x ./scripts/setup_ghexport
bash -x ./scripts/setup_rexport

# check for some other commands used in ./lint
set -e
havecmd realpath
havecmd flake8
havecmd black
havecmd shfmt
havecmd shellcheck
havecmd mypy
havecmd pytest
havecmd jq
set +e
